# 3D Nonlinear Transformed System - Linear Latent Dynamics
system_name: "nonlinear_transformed_linear_example"

# Training Mode: "prediction" with linear latent dynamics
mode: "prediction"

# 3D Nonlinear Transformed System Definition
# Based on: dx/dt = J_F(x)^(-1) * A * F(x)
# where F(x) = [f1(x1); f2(x2); f3(x3)] is a component-wise transformation
dynamics:
  type: "nonlinear_transformed"
  parameters:
    mu: -0.2       # Parameter μ in the linear system matrix A (eigenvalue 1)
    lambda: -0.4   # Parameter λ in the linear system matrix A (eigenvalue 2)
    alpha: 0.6     # Nonlinearity strength for coordinate transformation
    beta: 0.8      # Additional nonlinearity parameter

# Initial Conditions Sampling
initial_conditions:
  bounds:
    x1: [-4.0, 4.0]
    x2: [-4.0, 4.0]
    x3: [-4.0, 4.0]
  num_samples: 500
  sampling_method: "grid"

# Trajectory Generation
trajectory:
  time_span: [0.0, 20.0]
  time_points: 500
  solver: "RK45"
  rtol: 0.00000001
  atol: 0.0000000001
  normalize: false
  remove_transient: 0

# Dataset Configuration
dataset:
  train_split: 0.8
  val_split: 0.1
  test_split: 0.1
  shuffle: true
  random_seed: 42

# State-Space Autoencoder (3D -> 3D manifold with linear dynamics)
autoencoder:
  latent_dim: 3
  
  encoder:
    hidden_layers: [64, 32]
    activation: "tanh"
    dropout: 0.0
    batch_norm: false
  
  decoder:
    hidden_layers: [32, 64]
    activation: "tanh"
    dropout: 0.0
    batch_norm: false
    output_activation: "linear"
  
  # Linear latent dynamics: z_k+1 = A * z_k
  latent_dynamics:
    linear: true  # Enable linear latent dynamics
    # Note: When linear=true, hidden_layers, activation, dropout are ignored

# Training Configuration
training:
  batch_size: 512
  epochs: 100
  learning_rate: 0.001
  optimizer: "adam"
  scheduler:
    type: "step"
    step_size: 30
    gamma: 0.7
  loss_function: "mse"
  early_stopping:
    patience: 15
    min_delta: 0.000001
  save_best_model: true
  
  # Prediction mode settings
  prediction:
    reconstruction_weight: 1.0  # Weight for reconstruction loss
    prediction_weight: 10.0      # Weight for prediction loss
    
    # Multi-step prediction settings
    prediction_steps: 30         # Number of future steps to predict
    decay_factor: 0.95          # Exponential decay factor

# Evaluation Configuration
evaluation:
  metrics:
    - "reconstruction_error"
    - "manifold_quality"
    - "pca_comparison"
  
  visualization:
    plot_manifold: true
    plot_reconstruction: true
    plot_trajectories: true
    save_plots: true
    plot_format: "png"
    dpi: 300

# Output Configuration
output:
  base_dir: "results"
  experiment_name: "nonlinear_transformed_linear_example"
  save_model: true
  save_embeddings: true
  generate_report: true 